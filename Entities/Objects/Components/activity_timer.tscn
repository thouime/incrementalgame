[gd_scene load_steps=7 format=3 uid="uid://dlrmxq4bnsyvu"]

[ext_resource type="Script" path="res://Entities/Objects/Components/activity_timer.gd" id="1_tks2k"]
[ext_resource type="Script" path="res://Entities/Objects/Components/timer_circle.gd" id="3_2ioon"]

[sub_resource type="StyleBoxFlat" id="StyleBoxFlat_y7c47"]
bg_color = Color(0.6, 0.6, 0.6, 0)
corner_radius_top_left = 15
corner_radius_top_right = 15
corner_radius_bottom_right = 15
corner_radius_bottom_left = 15
anti_aliasing = false

[sub_resource type="StyleBoxFlat" id="StyleBoxFlat_gwwra"]
bg_color = Color(0.084, 0.6, 0.084, 1)
border_width_left = 1
border_width_top = 1
border_width_right = 1
border_width_bottom = 1
border_color = Color(0.0235723, 0.161317, 0.146834, 1)
border_blend = true
corner_radius_top_left = 15
corner_radius_top_right = 15
corner_radius_bottom_right = 15
corner_radius_bottom_left = 15
anti_aliasing = false

[sub_resource type="Shader" id="Shader_8ivrw"]
code = "shader_type canvas_item;

// RADIAL PROGRESSBAR BY PENGGRIN (<https://github.com/penggrin12>)
// (INTENDED FOR A HEALTH BAR)

// ORIGINAL SHADER: https://www.shadertoy.com/view/WdcGRM
// BY <https://www.shadertoy.com/user/calx>

#define TWO_PI 6.28318530718

uniform vec3 primary_color: source_color = vec3(1.0);
uniform vec3 outline_color: source_color = vec3(0.0);
uniform float value: hint_range(0.0, 1.0, 0.01) = 1.0;

uniform float smooth_ = 0.005;
uniform float width_in = 0.85;
uniform float width_out = 0.95;
uniform float border_width = 0.03;

vec4 radial_progress(vec2 UV_, float VAL, float SMOOTH, float IR, float OR)
{
    vec2 uv = (UV_ * 2.0) - 1.0;
    vec2 origin = vec2(0.0, 0.0);

    float ir = IR;
    float or = OR;
    float d = length(uv);
    float ring = smoothstep(or + SMOOTH, or - SMOOTH, d) - smoothstep(ir + SMOOTH, ir - SMOOTH, d);
    float a = atan(uv.y - origin.y, uv.x - origin.x);
    float theta = (a < -TWO_PI / 4.0) ? (a + TWO_PI + TWO_PI / 4.0) / TWO_PI : (a + TWO_PI / 4.0) / TWO_PI;
    float bar = step(theta, VAL);
    float ui = ring * bar;

    vec4 colour = vec4(ui);

    return colour;
}

void fragment()
{
    // Calculate the primary color (filled portion)
    vec4 primary = vec4(primary_color, 1.0) * radial_progress(UV, value, smooth_, width_in, width_out);

    // Calculate the outline (only show the edges)
    vec4 outline = vec4(outline_color, 1.0) * radial_progress(UV, value, smooth_, width_in - border_width, width_out + border_width);

    // Ensure that the unfilled area is fully transparent and only the outline and filled portion are visible
    if (value == 0.0)
    {
        // Fully transparent when no progress (no outline, no fill)
        COLOR = vec4(0.0, 0.0, 0.0, 0.0);
    }
    else
    {
        // Combine the outline and the primary color
        COLOR = primary + outline;  // Outline and primary color together, but nothing in the center
    }
}
"

[sub_resource type="ShaderMaterial" id="ShaderMaterial_7sga3"]
resource_local_to_scene = true
shader = SubResource("Shader_8ivrw")
shader_parameter/primary_color = Color(0.00205159, 0.329163, 0.0210897, 1)
shader_parameter/outline_color = Color(0.00105691, 0.281555, 0.0158145, 1)
shader_parameter/value = 1.0
shader_parameter/smooth_ = 0.01
shader_parameter/width_in = 0.5
shader_parameter/width_out = 0.95
shader_parameter/border_width = 0.1

[node name="ActivityTimer" type="Node2D"]
script = ExtResource("1_tks2k")

[node name="ProgressBar" type="ProgressBar" parent="."]
z_index = 3
offset_right = 26.0
offset_bottom = 10.0
theme_override_styles/background = SubResource("StyleBoxFlat_y7c47")
theme_override_styles/fill = SubResource("StyleBoxFlat_gwwra")
show_percentage = false

[node name="Timer" type="Timer" parent="."]

[node name="TimerCircle" type="ColorRect" parent="."]
z_index = 100
material = SubResource("ShaderMaterial_7sga3")
anchors_preset = 8
anchor_left = 0.5
anchor_top = 0.5
anchor_right = 0.5
anchor_bottom = 0.5
offset_right = 15.0
offset_bottom = 15.0
grow_horizontal = 2
grow_vertical = 2
size_flags_horizontal = 4
size_flags_vertical = 4
script = ExtResource("3_2ioon")

[node name="RegenTimer" type="Timer" parent="."]
